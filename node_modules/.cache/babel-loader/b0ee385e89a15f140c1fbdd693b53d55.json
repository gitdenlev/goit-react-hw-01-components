{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\src\\\\components\\\\statisctics\\\\Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport const Statistics = (title, stats) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"statistics\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.stat_list,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: label[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: percentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: label[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: \"14%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: label[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: \"41%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: label[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"percentage\",\n          children: \"12%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Statistics;\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/React/src/components/statisctics/Statistics.jsx"],"names":["PropTypes","css","getRandomHexColor","Math","floor","random","toString","Statistics","title","stats","stat_list","label","percentage","propTypes","string","arrayOf","shape","id","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;AAGA,SAASC,iBAAT,GAA6B;AAC3B,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACD;;AAGD,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,eACCD,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACO,KAAnB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADV,eAGN;AAAI,MAAA,SAAS,EAAEP,GAAG,CAACS,SAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACQ;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBC,KAAK,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBD,KAAK,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBA,KAAK,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAaE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBA,KAAK,CAAC,CAAD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHM;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAzBM;KAAMJ,U;AA4BbA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,KAAK,EAAER,SAAS,CAACc,MADI;AAErBL,EAAAA,KAAK,EAAET,SAAS,CAACe,OAAV,CACLf,SAAS,CAACgB,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEjB,SAAS,CAACc,MAAV,CAAiBI,UADP;AAEdP,IAAAA,KAAK,EAAEX,SAAS,CAACc,MAAV,CAAiBI,UAFV;AAGdN,IAAAA,UAAU,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAHf,GAAhB,CADK,EAMLA;AARmB,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\n\r\nfunction getRandomHexColor() {\r\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\n\r\nexport const Statistics = (title, stats) => {\r\n    return (\r\n        <section className=\"statistics\">\r\n        {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n  <ul className={css.stat_list}>\r\n    <li className=\"item\">\r\n            <span className=\"label\">{label[0]}</span>\r\n            <span className=\"percentage\">{percentage}</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span className=\"label\">{label[1]}</span>\r\n      <span className=\"percentage\">14%</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span className=\"label\">{label[2]}</span>\r\n      <span className=\"percentage\">41%</span>\r\n    </li>\r\n    <li className=\"item\">\r\n      <span className=\"label\">{label[3]}</span>\r\n      <span className=\"percentage\">12%</span>\r\n    </li>\r\n  </ul>\r\n</section>\r\n    )\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}